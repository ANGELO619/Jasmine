[{"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\index.js":"1","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\store.js":"3","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\App.js":"4","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\reducers\\authReducer.js":"5","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\Pages\\CartPage.js":"7","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\constants\\authConstants.js":"8","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\LoginDialog.js":"9","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\Pages\\HomePage.js":"10","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\Pages\\ProfilePage.js":"11","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\constants\\cartConstants.js":"12","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\cart-checkout\\ShoppingCart.js":"13","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\cart-checkout\\Form.js":"14","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\Loading.js":"15","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\ProductMoodal.js":"16","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\NumberInput.js":"17"},{"size":1105,"mtime":1608637426833,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1608397588704,"results":"20","hashOfConfig":"19"},{"size":1027,"mtime":1608637426835,"results":"21","hashOfConfig":"19"},{"size":3789,"mtime":1608673471257,"results":"22","hashOfConfig":"19"},{"size":558,"mtime":1608647625787,"results":"23","hashOfConfig":"19"},{"size":996,"mtime":1608637426835,"results":"24","hashOfConfig":"19"},{"size":2169,"mtime":1608647760449,"results":"25","hashOfConfig":"19"},{"size":144,"mtime":1608575330236,"results":"26","hashOfConfig":"19"},{"size":1247,"mtime":1608575330234,"results":"27","hashOfConfig":"19"},{"size":5242,"mtime":1608674352580,"results":"28","hashOfConfig":"19"},{"size":4862,"mtime":1608670025978,"results":"29","hashOfConfig":"19"},{"size":153,"mtime":1608637426831,"results":"30","hashOfConfig":"19"},{"size":1954,"mtime":1608641758233,"results":"31","hashOfConfig":"19"},{"size":5977,"mtime":1608647902618,"results":"32","hashOfConfig":"19"},{"size":285,"mtime":1608637797505,"results":"33","hashOfConfig":"19"},{"size":2696,"mtime":1608673429524,"results":"34","hashOfConfig":"19"},{"size":1511,"mtime":1608660298693,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rijmvd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\index.js",[],["78","79"],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\store.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\App.js",["80","81","82"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport ProfilePage from \"./Pages/ProfilePage\";\r\nimport CartPage from \"./Pages/CartPage\";\r\nimport { Nav, Navbar, Badge } from \"react-bootstrap\";\r\nimport LoginDialog from \"./components/LoginDialog\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  AUTH_LOGIN,\r\n  AUTH_LOGOUT,\r\n  AUTH_SHOW_LOGIN_DIALOG,\r\n} from \"./constants/authConstants\";\r\nimport { useFirebase, useFirestore } from \"react-redux-firebase\";\r\nimport { Cart } from 'react-bootstrap-icons';\r\n\r\nfunction App(props) {\r\n  const firebase = useFirebase();\r\n  const firestore = useFirestore()\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n\r\n  const setShowLogin = useCallback(\r\n    (show) => {\r\n      dispatch({\r\n        type: AUTH_SHOW_LOGIN_DIALOG,\r\n        payload: show,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setIsLogin = useCallback(\r\n    (isLogin, user = null) => {\r\n      if (!isLogin) {\r\n        dispatch({\r\n          type: AUTH_LOGOUT,\r\n        });\r\n        return;\r\n      }\r\n      dispatch({\r\n        type: AUTH_LOGIN,\r\n        payload: user,\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [cart, setCart] = useState({\r\n    id: null,\r\n    items: [],\r\n    belongTo: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firestore\r\n      .collection(\"carts\")\r\n      .doc('test_cart')\r\n      .onSnapshot(snapshot => {\r\n        console.log(snapshot);\r\n        setCart(snapshot.data());\r\n      })\r\n    return () => unsubscribe()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase\r\n      .auth()\r\n      .onAuthStateChanged((user) => {\r\n        if (!user) {\r\n          setIsLogin(false);\r\n          return;\r\n        }\r\n        setShowLogin(false);\r\n        setIsLogin(true, user);\r\n      });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar className=\"bg-main\" expand=\"md\">\r\n          <Link to=\"/\">\r\n            <Navbar.Brand href=\"#home\">JASMINE</Navbar.Brand>\r\n          </Link>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n            <Nav>\r\n              <Nav.Link href=\"/cart\">\r\n                <Cart size={24} >\r\n\r\n                </Cart><Badge variant=\"danger\">{cart.items.length}</Badge>\r\n              </Nav.Link>\r\n              {auth.isLogin ? (\r\n                <Nav.Link href=\"/profile\">Profile</Nav.Link>\r\n              ) : null}\r\n              {auth.isLogin ? (\r\n                <Nav.Link\r\n                  title=\"Logout\"\r\n                  onClick={() => firebase.auth().signOut()}\r\n                >\r\n                  Logout\r\n                </Nav.Link>\r\n              ) : (\r\n                  <Nav.Link title=\"Login\" onClick={() => setShowLogin(true)}>\r\n                    Login\r\n                  </Nav.Link>\r\n                )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <LoginDialog\r\n          show={auth.showLoginDialog}\r\n          onHide={() => setShowLogin(false)}\r\n          callback={setIsLogin}\r\n        ></LoginDialog>\r\n\r\n        <main>\r\n          <Route path=\"/cart/:id?\" component={CartPage} />\r\n\r\n          <Route path=\"/\" exact={true} component={HomePage} />\r\n          <Route path=\"/profile\" component={ProfilePage} />\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\reducers\\authReducer.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\Pages\\CartPage.js",["83","84","85"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"../css/Cart.css\";\r\nimport ShoppingCart from \"../components/cart-checkout/ShoppingCart\";\r\nimport PlaceOrderForm from \"../components/cart-checkout/Form\";\r\nimport { useFirebase, useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function CartPage(props) {\r\n  const firestore = useFirestore();\r\n  const cartId = \"test_cart\";\r\n\r\n  const currentUser = useSelector((state) => state.auth.user);\r\n\r\n  const [cart, setCart] = useState({\r\n    id: null,\r\n    items: [],\r\n    belongTo: null,\r\n  });\r\n\r\n  let { items } = cart;\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"carts\")\r\n      .doc(cartId)\r\n      .get()\r\n      .then((doc) => {\r\n        const cartData = doc.data();\r\n\r\n        if (!cartData) {\r\n          return props.history.push(\"/\");\r\n        }\r\n\r\n        if (cartData.items.length === 0) {\r\n          return props.history.push(\"/\");\r\n        }\r\n        setCart(doc.data());\r\n      });\r\n  }, []);\r\n\r\n  const onUpdateCart = async (payload) => {\r\n    const itemIndex = items.findIndex(\r\n      ({ product }) => product.id === payload.product.id\r\n    );\r\n\r\n    items[itemIndex] = payload;\r\n\r\n    await firestore.collection(\"carts\").doc(cartId).update({ items });\r\n\r\n    setCart({ ...cart, items });\r\n  };\r\n\r\n  const onRemoveItemFromCart = async (product) => {\r\n    items = items.filter((item) => item.product.id !== product.id);\r\n\r\n    await firestore.collection(\"carts\").doc(cartId).update({ items });\r\n\r\n    setCart({ ...cart, items });\r\n\r\n    if (items.length === 0) {\r\n      return props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mx-xs-0 mx-smx-0 mx-md-0 mx-lg-0 mx-xl-0 mt-3\">\r\n      <Col md={6} lg={6} xl={6} sm={6} xs={12}>\r\n        <ShoppingCart\r\n          items={items}\r\n          onUpdateCart={onUpdateCart}\r\n          onRemoveItemFromCart={onRemoveItemFromCart}\r\n        ></ShoppingCart>\r\n      </Col>\r\n      <Col md={6} lg={6} xl={6} sm={6} xs={12}>\r\n        <PlaceOrderForm currentUser={currentUser}></PlaceOrderForm>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\constants\\authConstants.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\LoginDialog.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\Pages\\HomePage.js",["86","87","88","89","90","91","92","93"],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\Pages\\ProfilePage.js",["94"],"import { useEffect, useState } from \"react\";\r\nimport \"../css/Profile.css\";\r\nimport { Form, Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFirebase } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function ProfilePage(props) {\r\n  const currentUser = useSelector((state) => state.auth.user);\r\n  const firebase = useFirebase();\r\n\r\n  const [name, setName] = useState(currentUser?.displayName || \"\");\r\n  const [email, setEmail] = useState(currentUser?.email || \"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [subDistrict, setSubDistrict] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [province, setProvince] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n\r\n  const updateProfile = async (event) => {\r\n    event.preventDefault();\r\n    await Promise.all([\r\n      firebase.auth().currentUser.updateEmail(email),\r\n      firebase.auth().currentUser.updateProfile({\r\n        displayName: name,\r\n      }),\r\n    ]);\r\n    alert(\"Profile Updated!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase\r\n      .auth()\r\n      .onAuthStateChanged((user) => {\r\n        if (!user) {\r\n          return props.history.push(\"/\");\r\n        }\r\n        const { displayName, email: _email } = user;\r\n        setName(displayName);\r\n        setEmail(_email);\r\n      });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profile-title\">\r\n        <label>Profile</label>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <Form onSubmit={updateProfile}>\r\n          <div>\r\n            <Container className=\"img-container\">\r\n              <Row>\r\n                <Col className=\"text-center\" xs={12} md={12}>\r\n                  <img alt=\"\" src=\"/images/Avatar.jpg\" className=\"Avatar-img\" />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicAddress\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type=\"address\"\r\n                placeholder=\"Enter address\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formBasicSub-district\">\r\n                <Form.Label>Sub-district</Form.Label>\r\n                <Form.Control\r\n                  type=\"sub-district\"\r\n                  placeholder=\"Enter sub-district\"\r\n                  value={subDistrict}\r\n                  onChange={(e) => setSubDistrict(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formBasicDistrict\">\r\n                <Form.Label>District</Form.Label>\r\n                <Form.Control\r\n                  type=\"district\"\r\n                  placeholder=\"Enter district\"\r\n                  value={district}\r\n                  onChange={(e) => setDistrict(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formBasicProvince\">\r\n                <Form.Label>Province</Form.Label>\r\n                <Form.Control\r\n                  type=\"province\"\r\n                  placeholder=\"Enter province\"\r\n                  value={province}\r\n                  onChange={(e) => setProvince(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"formBasicZipCode\">\r\n                <Form.Label>Zip Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"zipcode\"\r\n                  placeholder=\"Enter zipcode\"\r\n                  value={zipCode}\r\n                  onChange={(e) => setZipCode(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button className=\"btn\" variant=\"primary\" type=\"submit\">\r\n              Update Profile\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\cart-checkout\\ShoppingCart.js",["95"],"import React from \"react\";\r\nimport { Row, Col, Card, Button, Dropdown } from \"react-bootstrap\";\r\nimport \"../../css/Cart.css\";\r\nimport NumberInput from \"../NumberInput\";\r\n\r\nexport default function ShoppingCart(props) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title className=\"text-left title\">shopping cart</Card.Title>\r\n\r\n        {props.items.map((item) => (\r\n          <Row key={item.product.id}>\r\n            <Col md={4} lg={4} xl={4} sm={4} xs={4}>\r\n              <img\r\n                src={item.product.image}\r\n                alt={item.product.name}\r\n                className=\"product-image\"\r\n              ></img>\r\n            </Col>\r\n\r\n            <Col\r\n              md={8}\r\n              lg={8}\r\n              xl={8}\r\n              sm={8}\r\n              xs={8}\r\n              className=\"d-flex flex-row-reverse align-items-center justify-content-around\"\r\n            >\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => props.onRemoveItemFromCart(item.product)}\r\n              >\r\n                Delete{\" \"}\r\n              </Button>\r\n              <NumberInput\r\n                value={item.qty}\r\n                onChange={(qty) =>\r\n                  props.onUpdateCart({\r\n                    product: item.product,\r\n                    qty: Number(qty),\r\n                  })\r\n                }\r\n              ></NumberInput>\r\n\r\n              <div></div>\r\n              <div className=\"h5 text-left\"> {item.product.name}</div>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-right\">\r\n        <h2>\r\n          Subtotal (\r\n          {props.items.reduce((totalQty, item) => totalQty + item.qty, 0)}{\" \"}\r\n          items) : €{\" \"}\r\n          {props.items.reduce(\r\n            (totalPrice, item) => totalPrice + item.product.price * item.qty,\r\n            0\r\n          )}\r\n        </h2>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\cart-checkout\\Form.js",["96"],"import React, { useState } from \"react\";\r\nimport { Col, Card, Row, Button, Modal } from \"react-bootstrap\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\n// PlaceOrderForm\r\n\r\nexport default function PlaceOrderForm(props) {\r\n  const [information, setInformation] = useState(\r\n    props.currentUser || {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      subdistrict: \"\",\r\n      district: \"\",\r\n      province: \"\",\r\n      postCode: \"\",\r\n    }\r\n  );\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title className=\"text-left title\">information</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            <Row className=\"mb-5\">\r\n              <Col md={12} lg={12} xl={12} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>name</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <input\r\n                      name=\"name\"\r\n                      className=\"full-length-input\"\r\n                      required\r\n                      value={information.displayName}\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col md={12} lg={12} xl={12} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>email</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <input\r\n                      name=\"email\"\r\n                      className=\"full-length-input\"\r\n                      value={information.email}\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col md={12} lg={12} xl={12} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>address</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <input\r\n                      name=\"address\"\r\n                      className=\"full-length-input\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={6} xl={6} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>sub-district</p>\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      name=\"subdistrict\"\r\n                      className=\"full-length-input\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={6} xl={6} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>distric</p>\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      name=\"district\"\r\n                      className=\"full-length-input\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={6} xl={6} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>province</p>\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      name=\"province\"\r\n                      className=\"full-length-input\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={6} xl={6} sm={12} xs={12}>\r\n                <div className=\"text-left mt-4\">\r\n                  <div className=\"title\">\r\n                    <p>post code</p>\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      name=\"postcode\"\r\n                      className=\"full-length-input\"\r\n                      required\r\n                    ></input>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card.Subtitle>\r\n\r\n          <Row>\r\n            <Col md={12} className=\"text-left\">\r\n              <h3 className=\"title\">payment method</h3>\r\n            </Col>\r\n\r\n            <Col md={12} className=\"justify-content-center my-5 title\">\r\n              <Button\r\n                className=\"button-text qr-button\"\r\n                onClick={(e) => {\r\n                  for (\r\n                    let i = 0;\r\n                    i < document.getElementsByTagName(\"input\").length;\r\n                    i++\r\n                  ) {\r\n                    if (document.getElementsByTagName(\"input\")[i].value) {\r\n                      if (i === 6) {\r\n                        handleShow();\r\n                      }\r\n                    } else {\r\n                      alert(\"Please complete form\");\r\n                      break;\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                qr code\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <QRCode value=\"http://facebook.github.io/react/\" />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\ProductMoodal.js",["97"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NumberInput from \"./NumberInput\";\r\nimport firebase from \"firebase\";\r\nimport { AUTH_SHOW_LOGIN_DIALOG } from \"../constants/authConstants\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/ProductModal.css\";\r\n\r\nexport default function ProductModal(props) {\r\n  const product = props.product;\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [qty, setQty] = useState(1);\r\n  const firestore = useFirestore();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const addToCartHandler = async () => {\r\n    if (!auth.isLogin) {\r\n      dispatch({\r\n        type: AUTH_SHOW_LOGIN_DIALOG,\r\n        payload: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    await firestore\r\n      .collection(\"carts\")\r\n      .doc(\"test_cart\")\r\n      .set(\r\n        {\r\n          items: firebase.firestore.FieldValue.arrayUnion({\r\n            product,\r\n            qty,\r\n          }),\r\n        },\r\n        { merge: true }\r\n      );\r\n    props.hide();\r\n    // history.push(`/cart`);\r\n  };\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleClose} animation={true}>\r\n      <Modal.Header closeButton onClick={props.hide}></Modal.Header>\r\n      <Modal.Body>\r\n        <Card className=\" flex text-center justify-content-center\">\r\n          <Card.Title className=\"mt-5\">{product.name}</Card.Title>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            className=\"modal-image\"\r\n            src={product.image}\r\n          ></Card.Img>\r\n          <Card.Subtitle className=\"text-left my-3 mx-3\">\r\n            catagory : {product.category}\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"text-left my-3 mx-3\">\r\n            description : {product.description}\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"text-left my-3 mx-3\">\r\n            price : {product.price}\r\n            {\"$ \"}\r\n          </Card.Subtitle>\r\n          <Card.Body>\r\n            <Card.Text className=\"text-center\">\r\n              <NumberInput\r\n                value={qty}\r\n                onChange={setQty}\r\n                maxValue={product.countInStock}\r\n              ></NumberInput>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.hide}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={() => addToCartHandler()}>\r\n          Add to art\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","C:\\Users\\ilcha\\Documents\\Jasmine\\frontend\\src\\components\\NumberInput.js",["98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../css/NumberInput.css\";\r\n\r\nexport default function NumberInput(props) {\r\n  const [input, setInput] = useState(Number(props.value));\r\n  const [max, setMax] = useState(Number(props.maxValue));\r\n\r\n  useEffect(() => {\r\n    if (input >= max) {\r\n      setInput(max);\r\n    }\r\n  });\r\n\r\n  const increase = () => {\r\n    const value = input + 1;\r\n    setInput(value);\r\n    props.onChange(value);\r\n  };\r\n\r\n  const decrease = () => {\r\n    const value = input - 1;\r\n    setInput(value);\r\n    props.onChange(value);\r\n  };\r\n\r\n  const onChange = (e) => {};\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"d-flex align-items-center justify-content-start\">\r\n        <div className=\"mx-2 \">\r\n          <Button\r\n            className=\"rounded-circle \"\r\n            style={{ width: 40, height: 40 }}\r\n            onClick={decrease}\r\n          >\r\n            -\r\n          </Button>\r\n        </div>\r\n        <div className=\"input \">\r\n          <input\r\n            type=\"number\"\r\n            className=\"input-height text-center\"\r\n            min={0}\r\n            value={input}\r\n            onChange={onChange}\r\n          ></input>\r\n        </div>\r\n        <div className=\"mx-2\">\r\n          <Button\r\n            className=\"rounded-circle\"\r\n            style={{ width: 40, height: 40 }}\r\n            onClick={increase}\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":9,"column":3,"nodeType":"106","messageId":"107","endLine":9,"endColumn":10},{"ruleId":"108","severity":1,"message":"109","line":75,"column":6,"nodeType":"110","endLine":75,"endColumn":8,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":89,"column":6,"nodeType":"110","endLine":89,"endColumn":8,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":34},{"ruleId":"104","severity":1,"message":"115","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":21},{"ruleId":"108","severity":1,"message":"116","line":40,"column":6,"nodeType":"110","endLine":40,"endColumn":8,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"119","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":41,"column":37,"nodeType":"122","messageId":"123","endLine":41,"endColumn":39},{"ruleId":"108","severity":1,"message":"109","line":62,"column":6,"nodeType":"110","endLine":62,"endColumn":8,"suggestions":"124"},{"ruleId":"108","severity":1,"message":"109","line":72,"column":6,"nodeType":"110","endLine":72,"endColumn":8,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":97,"column":15,"nodeType":"128","endLine":97,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":102,"column":41,"nodeType":"122","messageId":"123","endLine":102,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":128,"column":19,"nodeType":"128","endLine":128,"endColumn":56},{"ruleId":"108","severity":1,"message":"129","line":42,"column":6,"nodeType":"110","endLine":42,"endColumn":8,"suggestions":"130"},{"ruleId":"104","severity":1,"message":"131","line":2,"column":34,"nodeType":"106","messageId":"107","endLine":2,"endColumn":42},{"ruleId":"104","severity":1,"message":"132","line":8,"column":23,"nodeType":"106","messageId":"107","endLine":8,"endColumn":37},{"ruleId":"104","severity":1,"message":"133","line":14,"column":9,"nodeType":"106","messageId":"107","endLine":14,"endColumn":16},{"ruleId":"104","severity":1,"message":"134","line":7,"column":15,"nodeType":"106","messageId":"107","endLine":7,"endColumn":21},{"ruleId":"108","severity":1,"message":"135","line":9,"column":3,"nodeType":"106","endLine":9,"endColumn":12,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firestore'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'firebase', 'setIsLogin', and 'setShowLogin'. Either include them or remove the dependency array.",["140"],"'useRef' is defined but never used.","'useFirebase' is defined but never used.","React Hook useEffect has missing dependencies: 'firestore' and 'props.history'. Either include them or remove the dependency array.",["141"],"'Link' is defined but never used.","'Loading' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["142"],["143"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'firebase' and 'props.history'. Either include them or remove the dependency array.",["144"],"'Dropdown' is defined but never used.","'setInformation' is assigned a value but never used.","'history' is assigned a value but never used.","'setMax' is assigned a value but never used.","React Hook useEffect contains a call to 'setInput'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [input, max] as a second argument to the useEffect Hook.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"146","fix":"152"},{"desc":"146","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [firestore]",{"range":"158","text":"159"},"Update the dependencies array to be: [firebase, setIsLogin, setShowLogin]",{"range":"160","text":"161"},"Update the dependencies array to be: [firestore, props.history]",{"range":"162","text":"163"},{"range":"164","text":"159"},{"range":"165","text":"159"},"Update the dependencies array to be: [firebase, props.history]",{"range":"166","text":"167"},"Add dependencies array: [input, max]",{"range":"168","text":"169"},[1787,1789],"[firestore]",[2196,2198],"[firebase, setIsLogin, setShowLogin]",[1073,1075],"[firestore, props.history]",[1883,1885],[2090,2092],[1511,1513],"[firebase, props.history]",[377,377],", [input, max]"]