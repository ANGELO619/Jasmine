[{"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\index.js":"1","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\reportWebVitals.js":"2","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\App.js":"3","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\store.js":"4","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\CartPage.js":"5","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\ProfilePage.js":"6","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\ProductPage.js":"7","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\HomePage.js":"8","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\components\\LoginDialog.js":"9","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\constants\\authConstants.js":"10","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\reducers\\cartReducers.js":"11","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\reducers\\authReducer.js":"12","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\constants\\cartConstants.js":"13","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\components\\cart-checkout\\ShoppingCart.js":"14","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\components\\cart-checkout\\Form.js":"15"},{"size":1105,"mtime":1608637283893,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1608637283894,"results":"18","hashOfConfig":"17"},{"size":3050,"mtime":1608637283885,"results":"19","hashOfConfig":"17"},{"size":1027,"mtime":1608637283894,"results":"20","hashOfConfig":"17"},{"size":2011,"mtime":1608637738424,"results":"21","hashOfConfig":"17"},{"size":3827,"mtime":1608643884279,"results":"22","hashOfConfig":"17"},{"size":3512,"mtime":1608637283887,"results":"23","hashOfConfig":"17"},{"size":2383,"mtime":1608637283887,"results":"24","hashOfConfig":"17"},{"size":1247,"mtime":1608637283889,"results":"25","hashOfConfig":"17"},{"size":144,"mtime":1608637283891,"results":"26","hashOfConfig":"17"},{"size":996,"mtime":1608637283894,"results":"27","hashOfConfig":"17"},{"size":579,"mtime":1608637283893,"results":"28","hashOfConfig":"17"},{"size":153,"mtime":1608637283891,"results":"29","hashOfConfig":"17"},{"size":2488,"mtime":1608637772229,"results":"30","hashOfConfig":"17"},{"size":5609,"mtime":1608637283890,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1e5n07k",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\index.js",[],["66","67"],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\reportWebVitals.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\App.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\store.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\CartPage.js",["68","69"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport \"../css/cart.css\";\r\nimport ShoppingCart from \"../components/cart-checkout/ShoppingCart\";\r\nimport AddressForm from \"../components/cart-checkout/Form\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\n\r\nexport default function CartPage(props) {\r\n  const firestore = useFirestore();\r\n  const cartId = \"test_cart\";\r\n\r\n  const [cart, setCart] = useState({\r\n    id: null,\r\n    items: [],\r\n    belongTo: null,\r\n  });\r\n\r\n  let { items } = cart;\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"carts\")\r\n      .doc(cartId)\r\n      .get()\r\n      .then((doc) => {\r\n        const cartData = doc.data();\r\n\r\n        if (!cartData) {\r\n          return props.history.push(\"/\");\r\n        }\r\n\r\n        if (cartData.items.length === 0) {\r\n          return props.history.push(\"/\");\r\n        }\r\n        setCart(doc.data());\r\n      });\r\n  }, []);\r\n\r\n  const onUpdateCart = async (payload) => {\r\n    const itemIndex = items.findIndex(\r\n      ({ product }) => product.id === payload.product.id\r\n    );\r\n\r\n    items[itemIndex] = payload;\r\n\r\n    await firestore.collection(\"carts\").doc(cartId).update({ items });\r\n\r\n    setCart({ ...cart, items });\r\n  };\r\n\r\n  const onRemoveItemFromCart = async (product) => {\r\n    items = items.filter((item) => item.product.id !== product.id);\r\n\r\n    await firestore.collection(\"carts\").doc(cartId).update({ items });\r\n\r\n    setCart({ ...cart, items });\r\n\r\n    if (items.length === 0) {\r\n      return props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mx-xs-0 mx-smx-0 mx-md-0 mx-lg-0 mx-xl-0 mt-3\">\r\n      <Col md={6} lg={6} xl={6} sm={6} xs={12}>\r\n        <ShoppingCart\r\n          items={items}\r\n          onUpdateCart={onUpdateCart}\r\n          onRemoveItemFromCart={onRemoveItemFromCart}\r\n        ></ShoppingCart>\r\n      </Col>\r\n      <Col md={6} lg={6} xl={6} sm={6} xs={12}>\r\n        <AddressForm></AddressForm>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\ProfilePage.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\ProductPage.js",["70"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AUTH_SHOW_LOGIN_DIALOG } from \"../constants/authConstants\"\r\nimport { useFirestore } from 'react-redux-firebase'\r\nimport \"../css/Product.css\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Button, Dropdown } from \"react-bootstrap\";\r\nimport firebase from 'firebase'\r\n\r\nfunction ProductPage(props) {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productId = props.match.params.id;\r\n  const [product, setProduct] = useState({\r\n    id: '',\r\n    name: '',\r\n    description: '',\r\n    price: 0,\r\n    options: '',\r\n    countInStock: 0,\r\n    category: '',\r\n    image: ''\r\n  })\r\n\r\n  const firestore = useFirestore()\r\n\r\n  useEffect(() => {\r\n    firestore.collection('products').doc(productId).get().then(doc => {\r\n      setProduct(doc.data())\r\n    })\r\n  }, [])\r\n\r\n\r\n  const addToCartHandler = async () => {\r\n    if (!auth.isLogin) {\r\n      dispatch({\r\n        type: AUTH_SHOW_LOGIN_DIALOG,\r\n        payload: true\r\n      })\r\n      return\r\n    }\r\n\r\n    await firestore.collection('carts').doc('test_cart').set({\r\n      items: firebase.firestore.FieldValue.arrayUnion({\r\n        product,\r\n        qty\r\n      })\r\n    }, { merge: true })\r\n\r\n    props.history.push(`/cart/${productId}?qty=${qty}`);\r\n  };\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md={6}>\r\n          <div className=\"d-flex flex-row align-items-center justify-content-center product-image-container\">\r\n            <img className=\"product-image\" src={product.image} alt=\"product\"></img>\r\n          </div>\r\n        </Col>\r\n        <Col md={6} className=\"d-flex flex-row align-items-center justify-content-center\">\r\n          <div className=\"details-info\">\r\n            <ul>\r\n              <li>\r\n                <h4>{product.name}</h4>\r\n              </li>\r\n              <li>\r\n                <b>Brand: {product.brand}</b>\r\n              </li>\r\n              <li>\r\n                <b>\r\n                  Price:{\" \"}\r\n                  <span className=\"price-color\">€ {product.price}</span>\r\n                </b>\r\n              </li>\r\n              <li>\r\n                <b>\r\n                  Price:{\" \"}\r\n                  <span >€ {product.description}</span>\r\n                </b>\r\n              </li>\r\n              <li>\r\n                <b>Status: </b>\r\n                {product.countInStock > 0 ? (\r\n                  <span className=\"success\">In Stock</span>\r\n                ) : (\r\n                    <span className=\"danger\">Unavailable</span>\r\n                  )}\r\n              </li>\r\n              <li>\r\n                <Dropdown>\r\n                  <Dropdown.Toggle id=\"dropdown-basic\">{qty}</Dropdown.Toggle>\r\n\r\n                  <Dropdown.Menu>\r\n                    {[...Array(Number(product.countInStock)).keys()].map((x) => (\r\n                      <Dropdown.Item key={x} eventKey={x + 1} onSelect={\r\n                        (value) => setQty(value)\r\n                      }>\r\n                        {x + 1}\r\n                      </Dropdown.Item>\r\n                    ))}\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </li>\r\n              <li>\r\n                <Button onClick={addToCartHandler}>Add to Cart</Button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProductPage;\r\n","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\Pages\\HomePage.js",["71"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport \"../css/Home.css\";\r\nimport { useFirestore } from 'react-redux-firebase'\r\n\r\n\r\nfunction HomePage() {\r\n  const firestore = useFirestore()\r\n  const [products, setProducts] = useState([])\r\n\r\n\r\n  const listenerSettings = {\r\n    collection: 'products',\r\n    orderBy: ['createdAt', 'asc'],\r\n    limit: 10\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    firestore.collection('products').get().then(doc => {\r\n      setProducts(doc.docs.map(doc => doc.data()))\r\n    })\r\n\r\n    firestore.setListener(listenerSettings)\r\n\r\n    return function cleanup() {\r\n      firestore.unsetListener(listenerSettings)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"banner\">\r\n        <div className=\"banner-title\">\r\n          <p> discover quick & easy</p>\r\n          <p>resipe</p>\r\n        </div>\r\n      </div>\r\n      <Container className=\"mt-3 \">\r\n        <Row className=\"justify-content-md-center  my-5\">\r\n          <Col xs lg=\"4\" className=\"catagory-items\">\r\n            1 of 3\r\n              </Col>\r\n          <Col auto=\"true\" className=\"catagory-items\">\r\n            Variable width content\r\n              </Col>\r\n          <Col xs lg=\"4\" className=\"catagory-items\">\r\n            3 of 3\r\n              </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center my-5\">\r\n          {products.map((product) => (\r\n            <Col\r\n              md={4}\r\n              lg={4}\r\n              xl={3}\r\n              sm={6}\r\n              xs={12}\r\n              className=\"mx-3\"\r\n              key={product.id}\r\n            >\r\n              <Card style={{ width: \"18rem\" }} className=\"hover-zoom\">\r\n                <Card.Body>\r\n                  <Card.Title>{product.name}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted\">\r\n                    <Link to={`/product/${product.id}`}>\r\n                      <Card.Img variant=\"top\" src={product.image} />\r\n                    </Link>\r\n                    {product.brand} € {product.price}\r\n                  </Card.Subtitle>\r\n                  <Card.Text>{product.description}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","D:\\Personal-Proejct\\Jasmine\\frontend\\src\\components\\LoginDialog.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\constants\\authConstants.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\reducers\\authReducer.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\components\\cart-checkout\\ShoppingCart.js",[],"D:\\Personal-Proejct\\Jasmine\\frontend\\src\\components\\cart-checkout\\Form.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":37,"column":6,"nodeType":"82","endLine":37,"endColumn":8,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":31,"column":6,"nodeType":"82","endLine":31,"endColumn":8,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"86","line":30,"column":6,"nodeType":"82","endLine":30,"endColumn":8,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firestore' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has missing dependencies: 'firestore' and 'productId'. Either include them or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'firestore' and 'listenerSettings'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [firestore, props.history]",{"range":"99","text":"100"},"Update the dependencies array to be: [firestore, productId]",{"range":"101","text":"102"},"Update the dependencies array to be: [firestore, listenerSettings]",{"range":"103","text":"104"},[947,949],"[firestore, props.history]",[920,922],"[firestore, productId]",[753,755],"[firestore, listenerSettings]"]